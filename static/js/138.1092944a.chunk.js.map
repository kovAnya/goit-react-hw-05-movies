{"version":3,"file":"static/js/138.1092944a.chunk.js","mappings":"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","sources":["api/fetchApi.js","components/BackLinkBtn/BackLinkBtn.styled.js","components/BackLinkBtn/BackLinkBtn.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst APIKEY = '55e26443229e40ea5b05d468ef0985eb';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchApi = async () => {\n  const TrendingMovies = await axios.get(`/trending/all/day?api_key=${APIKEY}`);\n  return TrendingMovies.data.results;\n};\n\nexport const searchMovies = async name => {\n  const results = await axios.get(\n    `/search/movie?api_key=${APIKEY}&query=${name}&language=en-US&page=1&include_adult=false`\n  );\n  return results.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const currentMovie = await axios.get(\n    `/movie/${id}?api_key=${APIKEY}&language=en-US`\n  );\n  return currentMovie.data;\n};\n\nexport const getMovieCast = async id => {\n  const cast = await axios.get(\n    `movie/${id}/credits?api_key=${APIKEY}&language=en-US`\n  );\n  return cast.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const reviews = await axios.get(\n    `/movie/${id}/reviews?api_key=${APIKEY}&language=en-US&page=1`\n  );\n  return reviews.data.results;\n};\n","import styled from 'styled-components';\n\nexport const BackBtn = styled.button`\n  padding: 2px 20px;\n  margin-bottom: 10px;\n  border: 1px solid coral;\n  box-shadow: 0px 1px 5px #ccc;\n  border-radius: 4px;\n  font-weight: bold;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #fff;\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport * as SC from './BackLinkBtn.styled';\nimport PropTypes from 'prop-types';\n\nexport const BackLinkBtn = ({ path }) => {\n  return (\n    <Link to={path}>\n      <SC.BackBtn type=\"button\">Go back</SC.BackBtn>\n    </Link>\n  );\n};\n\nBackLinkBtn.propTypes = {\n  path: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 10px 30px;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const MovieInfo = styled.div`\n  display: flex;\n  gap: 30px;\n`;\nexport const AdditionalInfo = styled.div`\n  margin-top: 20px;\n  border-top: 1px solid #999;\n  border-bottom: 1px solid #999;\n\n  & li {\n    list-style: square;\n  }\n\n  & a {\n    color: #000;\n    font-size: 20px;\n    line-height: 28px;\n    padding: 5px;\n\n    &:hover {\n      color: coral;\n    }\n  }\n`;\n","import { useEffect, useState, Suspense } from 'react';\nimport { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport { getMovieDetails } from 'api/fetchApi';\nimport { BackLinkBtn } from '../../components/BackLinkBtn/BackLinkBtn';\nimport * as SC from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [currentMovie, setCurrentMovie] = useState();\n  const [errorMessage, setErrorMessage] = useState(false);\n  const { movieId } = useParams();\n  const baseUrl = 'https://image.tmdb.org/t/p/w300';\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n\n  useEffect(() => {\n    setErrorMessage(false);\n    const movieDetails = async () => {\n      try {\n        const currentMovieDetails = await getMovieDetails(movieId);\n        setCurrentMovie(currentMovieDetails);\n      } catch (error) {\n        setErrorMessage(true);\n      }\n    };\n    movieDetails();\n  }, [movieId]);\n\n  const proceedTitle = () => {\n    const title = currentMovie.title ?? currentMovie.name;\n    return title;\n  };\n\n  const proceedUserScore = () => {\n    if (currentMovie) {\n      return Math.round(currentMovie.vote_average * 10);\n    }\n  };\n\n  const proceedGenres = () => {\n    if (currentMovie) {\n      const genres = currentMovie.genres.map(genre => {\n        return genre.name;\n      });\n      return genres.join(' ');\n    }\n  };\n\n  const proceedImgUrl = path => {\n    const url = path\n      ? baseUrl + path\n      : 'https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/1665px-No-Image-Placeholder.svg.png';\n    return url;\n  };\n\n  return (\n    <SC.Container>\n      <BackLinkBtn path={backLink} />\n      {errorMessage && <p>Failed to load movie details</p>}\n      {currentMovie && (\n        <>\n          <SC.MovieInfo>\n            <img\n              src={proceedImgUrl(currentMovie.poster_path)}\n              alt={proceedTitle()}\n              width=\"300\"\n            />\n            <div>\n              <h1>{proceedTitle()}</h1>\n              <p>User score: {proceedUserScore()}%</p>\n              <h2>Overview</h2>\n              <p>{currentMovie.overview}</p>\n              <h2>Genres</h2>\n              {proceedGenres()}\n            </div>\n          </SC.MovieInfo>\n          <div>\n            <SC.AdditionalInfo>\n              <p>Additional information</p>\n              <ul>\n                <li>\n                  <Link to=\"cast\" state={location.state}>\n                    Cast\n                  </Link>\n                </li>\n                <li>\n                  <Link to=\"reviews\" state={location.state}>\n                    Reviews\n                  </Link>\n                </li>\n              </ul>\n            </SC.AdditionalInfo>\n            <Suspense fallback={<div>Loading in progress...</div>}>\n              <Outlet />\n            </Suspense>\n          </div>\n        </>\n      )}\n    </SC.Container>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["APIKEY","axios","fetchApi","TrendingMovies","data","results","searchMovies","name","getMovieDetails","id","currentMovie","getMovieCast","cast","getMovieReviews","reviews","BackBtn","styled","BackLinkBtn","path","to","type","Container","MovieInfo","AdditionalInfo","useState","setCurrentMovie","errorMessage","setErrorMessage","movieId","useParams","location","useLocation","backLink","state","from","useEffect","movieDetails","currentMovieDetails","proceedTitle","title","src","poster_path","alt","width","Math","round","vote_average","proceedUserScore","overview","genres","map","genre","join","proceedGenres","Suspense","fallback"],"sourceRoot":""}
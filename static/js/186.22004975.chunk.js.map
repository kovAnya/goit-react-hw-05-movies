{"version":3,"file":"static/js/186.22004975.chunk.js","mappings":"8SAEMA,EAAS,mCAEfC,EAAAA,GAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAQ,mCAAG,oGACOD,EAAAA,GAAAA,IAAA,oCAAuCD,IAD9C,cAChBG,EADgB,yBAEfA,EAAeC,KAAKC,SAFL,2CAAH,qDAKRC,EAAY,mCAAG,WAAMC,GAAN,uFACJN,EAAAA,GAAAA,IAAA,gCACKD,EADL,kBACqBO,EADrB,+CADI,cACpBF,EADoB,yBAInBA,EAAQD,KAAKC,SAJM,2CAAH,sDAOZG,EAAe,mCAAG,WAAMC,GAAN,uFACFR,EAAAA,GAAAA,IAAA,iBACfQ,EADe,oBACDT,EADC,oBADE,cACvBU,EADuB,yBAItBA,EAAaN,MAJS,2CAAH,sDAOfO,EAAY,mCAAG,WAAMF,GAAN,uFACPR,EAAAA,GAAAA,IAAA,gBACRQ,EADQ,4BACcT,EADd,oBADO,cACpBY,EADoB,yBAInBA,EAAKR,KAAKQ,MAJS,2CAAH,sDAOZC,EAAe,mCAAG,WAAMJ,GAAN,uFACPR,EAAAA,GAAAA,IAAA,iBACVQ,EADU,4BACYT,EADZ,2BADO,cACvBc,EADuB,yBAItBA,EAAQV,KAAKC,SAJS,2CAAH,qD,yGCM5B,UAlCgB,WACd,IAAQU,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOH,EAAP,KAAgBI,EAAhB,KACA,GAAwCD,EAAAA,EAAAA,WAAS,GAAjD,eAAOE,EAAP,KAAqBC,EAArB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACRD,GAAgB,GAChB,IAAME,EAAU,mCAAG,qGACST,EAAAA,EAAAA,IAAgBE,GADzB,OAEU,KADrBQ,EADW,QAEDC,QACdJ,GAAgB,GAElBF,EAAWK,GALM,2CAAH,qDAQhBD,GACD,GAAE,CAACP,KAGF,2BACGI,IAAgB,qEACjB,wBACGL,EAAQW,KAAI,SAAAC,GACX,OACE,qCACWA,EAAOC,OADlB,KAC0B,uBAAID,EAAOE,YAD5BF,EAAOjB,GAInB,QAIR,C","sources":["api/fetchApi.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst APIKEY = '55e26443229e40ea5b05d468ef0985eb';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchApi = async () => {\n  const TrendingMovies = await axios.get(`/trending/all/day?api_key=${APIKEY}`);\n  return TrendingMovies.data.results;\n};\n\nexport const searchMovies = async name => {\n  const results = await axios.get(\n    `/search/movie?api_key=${APIKEY}&query=${name}&language=en-US&page=1&include_adult=false`\n  );\n  return results.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const currentMovie = await axios.get(\n    `/movie/${id}?api_key=${APIKEY}&language=en-US`\n  );\n  return currentMovie.data;\n};\n\nexport const getMovieCast = async id => {\n  const cast = await axios.get(\n    `movie/${id}/credits?api_key=${APIKEY}&language=en-US`\n  );\n  return cast.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const reviews = await axios.get(\n    `/movie/${id}/reviews?api_key=${APIKEY}&language=en-US&page=1`\n  );\n  return reviews.data.results;\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from '../../api/fetchApi';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(false);\n\n  useEffect(() => {\n    setErrorMessage(false);\n    const getReviews = async () => {\n      const filmRewiews = await getMovieReviews(movieId);\n      if (filmRewiews.length === 0) {\n        setErrorMessage(true);\n      }\n      setReviews(filmRewiews);\n    };\n\n    getReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      {errorMessage && <p>We don't have any reviews for this movie</p>}\n      <ul>\n        {reviews.map(review => {\n          return (\n            <li key={review.id}>\n              Author: {review.author} <p>{review.content}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["APIKEY","axios","fetchApi","TrendingMovies","data","results","searchMovies","name","getMovieDetails","id","currentMovie","getMovieCast","cast","getMovieReviews","reviews","movieId","useParams","useState","setReviews","errorMessage","setErrorMessage","useEffect","getReviews","filmRewiews","length","map","review","author","content"],"sourceRoot":""}
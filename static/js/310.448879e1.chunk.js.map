{"version":3,"file":"static/js/310.448879e1.chunk.js","mappings":"8SAEMA,EAAS,mCAEfC,EAAAA,GAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAQ,mCAAG,oGACOD,EAAAA,GAAAA,IAAA,oCAAuCD,IAD9C,cAChBG,EADgB,yBAEfA,EAAeC,KAAKC,SAFL,2CAAH,qDAKRC,EAAY,mCAAG,WAAMC,GAAN,uFACJN,EAAAA,GAAAA,IAAA,gCACKD,EADL,kBACqBO,EADrB,+CADI,cACpBF,EADoB,yBAInBA,EAAQD,KAAKC,SAJM,2CAAH,sDAOZG,EAAe,mCAAG,WAAMC,GAAN,uFACFR,EAAAA,GAAAA,IAAA,iBACfQ,EADe,oBACDT,EADC,oBADE,cACvBU,EADuB,yBAItBA,EAAaN,MAJS,2CAAH,sDAOfO,EAAY,mCAAG,WAAMF,GAAN,uFACPR,EAAAA,GAAAA,IAAA,gBACRQ,EADQ,4BACcT,EADd,oBADO,cACpBY,EADoB,yBAInBA,EAAKR,KAAKQ,MAJS,2CAAH,sDAOZC,EAAe,mCAAG,WAAMJ,GAAN,uFACPR,EAAAA,GAAAA,IAAA,iBACVQ,EADU,4BACYT,EADZ,2BADO,cACvBc,EADuB,yBAItBA,EAAQV,KAAKC,SAJS,2CAAH,qD,qFC9BfU,E,OAAQC,GAAAA,GAAH,iK,SCELC,EAAiB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOX,EAAe,EAAfA,KAAME,EAAS,EAATA,GACtCU,GAAWC,EAAAA,EAAAA,MACXC,EAAoC,MAAtBF,EAASG,SAAmB,SAAWH,EAASG,SAEpE,OACE,SAAC,EAAD,WACE,SAAC,KAAD,CAAMC,GAAE,UAAKF,EAAL,YAAoBZ,GAAMe,MAAO,CAAEC,KAAMN,GAAjD,gBACGD,QADH,IACGA,EAAAA,EAASX,KAIjB,ECZYmB,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3B,OACE,wBACGA,EAAOC,KAAI,SAAAC,GAAK,OACf,SAACZ,EAAD,CAEEC,MAAOW,EAAMX,MACbX,KAAMsB,EAAMtB,KACZE,GAAIoB,EAAMpB,IAHLoB,EAAMpB,GAFE,KAUtB,C,qKCdYqB,EAAOd,EAAAA,GAAAA,KAAH,mEAKJe,EAAYf,EAAAA,GAAAA,MAAH,qHAOTgB,EAAMhB,EAAAA,GAAAA,OAAH,6P,SC6ChB,EArDe,WACb,OAA4BiB,EAAAA,EAAAA,UAAS,IAArC,eAAON,EAAP,KAAeO,EAAf,KACA,GAAwCD,EAAAA,EAAAA,WAAS,GAAjD,eAAOE,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACRJ,GAAgB,GAChB,IAAMK,EAAcH,EAAaI,IAAI,SACrC,GAAKD,EAAL,CAKA,IAAME,EAAmB,mCAAG,8GAEGrC,EAAAA,EAAAA,IAAamC,GAFhB,OAElBG,EAFkB,OAGxBV,EAAUU,GACkB,IAAxBA,EAAaC,QACfT,GAAgB,GALM,gDAQxBA,GAAgB,GARQ,yDAAH,qDAWzBO,GAbC,MAFCT,EAAU,GAgBb,GAAE,CAACI,IAYJ,OACE,6BACE,UAAC,EAAD,CAASQ,SAPQ,SAAAC,GALA,IAAAC,EAMnBD,EAAEE,iBANiBD,EAOND,EAAEG,OAAOC,SAASC,MAAMC,MALrCd,EAD2B,KAAVS,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAO9C,EAIG,WACE,SAAC,EAAD,CACEM,KAAK,OACL/C,KAAK,QACLgD,YAAY,wBAEd,SAAC,EAAD,CAAQD,KAAK,SAAb,uBAEDnB,IAAgB,oDAChBR,IAAU,SAACD,EAAA,EAAD,CAAYC,OAAQA,MAGpC,C","sources":["api/fetchApi.js","components/MoviesListItem/MoviesListItem.styled.js","components/MoviesListItem/MoviesListItem.jsx","components/MoviesList/MoviesList.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst APIKEY = '55e26443229e40ea5b05d468ef0985eb';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchApi = async () => {\n  const TrendingMovies = await axios.get(`/trending/all/day?api_key=${APIKEY}`);\n  return TrendingMovies.data.results;\n};\n\nexport const searchMovies = async name => {\n  const results = await axios.get(\n    `/search/movie?api_key=${APIKEY}&query=${name}&language=en-US&page=1&include_adult=false`\n  );\n  return results.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const currentMovie = await axios.get(\n    `/movie/${id}?api_key=${APIKEY}&language=en-US`\n  );\n  return currentMovie.data;\n};\n\nexport const getMovieCast = async id => {\n  const cast = await axios.get(\n    `movie/${id}/credits?api_key=${APIKEY}&language=en-US`\n  );\n  return cast.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const reviews = await axios.get(\n    `/movie/${id}/reviews?api_key=${APIKEY}&language=en-US&page=1`\n  );\n  return reviews.data.results;\n};\n","import styled from 'styled-components';\n\nexport const Movie = styled.li`\n  padding: 4px;\n  font-size: 18px;\n  list-style: square;\n\n  & a {\n    color: #000;\n    &:hover {\n      color: coral;\n    }\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport * as SC from './MoviesListItem.styled';\nimport PropTypes from 'prop-types';\n\nexport const MoviesListItem = ({ title, name, id }) => {\n  const location = useLocation();\n  const currentPage = location.pathname === '/' ? 'movies' : location.pathname;\n\n  return (\n    <SC.Movie>\n      <Link to={`${currentPage}/${id}`} state={{ from: location }}>\n        {title ?? name}\n      </Link>\n    </SC.Movie>\n  );\n};\n\nMoviesListItem.propTypes = {\n  title: PropTypes.string,\n  name: PropTypes.string,\n  id: PropTypes.number.isRequired,\n};\n","import { MoviesListItem } from '../MoviesListItem/MoviesListItem';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ movies }) => {\n  return (\n    <ul>\n      {movies.map(movie => (\n        <MoviesListItem\n          key={movie.id}\n          title={movie.title}\n          name={movie.name}\n          id={movie.id}\n        />\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array,\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin-top: 25px;\n  margin-left: 50px;\n`;\n\nexport const Searchbar = styled.input`\n  width: 500px;\n  padding: 8px;\n  border: 1px solid coral;\n  border-radius: 4px 0 0 4px;\n`;\n\nexport const Btn = styled.button`\n  padding: 8px 10px;\n  margin-bottom: 10px;\n  border: 1px solid coral;\n  box-shadow: 0px 1px 5px #ccc;\n  border-radius: 0 4px 4px 0;\n  font-weight: bold;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #fff;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovies } from '../../api/fetchApi';\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\nimport * as SC from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    setErrorMessage(false);\n    const searchValue = searchParams.get('query');\n    if (!searchValue) {\n      setMovies([]);\n      return;\n    }\n\n    const fetchSearchedMovies = async () => {\n      try {\n        const searchResult = await searchMovies(searchValue);\n        setMovies(searchResult);\n        if (searchResult.length === 0) {\n          setErrorMessage(true);\n        }\n      } catch (error) {\n        setErrorMessage(true);\n      }\n    };\n    fetchSearchedMovies();\n  }, [searchParams]);\n\n  const updateString = query => {\n    const newQuery = query !== '' ? { query } : {};\n    setSearchParams(newQuery);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    updateString(e.target.elements.input.value);\n  };\n\n  return (\n    <main>\n      <SC.Form onSubmit={handleSubmit}>\n        <SC.Searchbar\n          type=\"text\"\n          name=\"input\"\n          placeholder=\"Enter the keywords\"\n        />\n        <SC.Btn type=\"submit\">Search</SC.Btn>\n      </SC.Form>\n      {errorMessage && <p>No results on this query</p>}\n      {movies && <MoviesList movies={movies} />}\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["APIKEY","axios","fetchApi","TrendingMovies","data","results","searchMovies","name","getMovieDetails","id","currentMovie","getMovieCast","cast","getMovieReviews","reviews","Movie","styled","MoviesListItem","title","location","useLocation","currentPage","pathname","to","state","from","MoviesList","movies","map","movie","Form","Searchbar","Btn","useState","setMovies","errorMessage","setErrorMessage","useSearchParams","searchParams","setSearchParams","useEffect","searchValue","get","fetchSearchedMovies","searchResult","length","onSubmit","e","query","preventDefault","target","elements","input","value","type","placeholder"],"sourceRoot":""}